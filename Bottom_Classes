public class Bottom_Classes {
    public static class Car extends Land_Transportation{
        private String pickUpLocation;
        private int trunkSpace;
        private String pickUpTime;

        public Car(double purchasePrice, double rentalPrice, double averageSpeed,
                   int numPassengers, String fuelType, int trunkSpace,String pickUpLocation, String pickUpTime) {
            super(purchasePrice, rentalPrice, averageSpeed, numPassengers,fuelType);
            this.trunkSpace = trunkSpace;
            this.pickUpLocation = pickUpLocation;
            this.pickUpTime = pickUpTime;

        }
        public void setPickUpLocation(String pickUpLocation) {this.pickUpLocation = pickUpLocation;}
        public void setPickUpTime(String pickUpTime) {this.pickUpTime=pickUpTime;}
        public void setTrunkSpace(int trunkSpace) { this.trunkSpace = trunkSpace; }
        public int getTrunkSpace() { return this.trunkSpace; }
        public String getPickUpLocation() {return this.pickUpLocation;}
        public String getPickUpTime() {return this.pickUpTime;}


        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%-20s|%-20s|%n|%-20s|%-20s|%-20d|%n",
                    "Pickup location:","Pickup time:", "Trunk Space(m^3): ",getPickUpLocation() ,getPickUpTime(),
                    getTrunkSpace());
        }
        @Override
        public String get_arrival_info(){
            return "To pick up your car, arrive at " + getPickUpLocation() + " at " + getPickUpTime();
        }
        public String getName() {
            return "Car";
        }
    }

    public static class Bus extends Land_Transportation{
        private String startBusStop;
        private String departureTime;

        public Bus(double purchasePrice, double rentalPrice, double averageSpeed,
                   int numPassengers, String fuelType, String startBusStop, String departureTime) {
            super(purchasePrice, rentalPrice, averageSpeed, numPassengers,fuelType);
            this.startBusStop = startBusStop;
            this.departureTime = departureTime;

        }
        public void setDepartureTime(String departureTime) {this.departureTime=departureTime;}
        public void setStartBusStop(String busStop) { this.startBusStop = startBusStop; }
        public String getDepartureTime() {return this.departureTime;}
        public String getStartBusStop() { return this.startBusStop; }

        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%-20s|%n|%-20s|%-20s|%n", "Starting Stop: ",
                    "Departure time:", getStartBusStop(), getDepartureTime());
        }
        @Override
        public String get_arrival_info() {
            return "Arrive at " + getStartBusStop() + " at " + getDepartureTime();
        }

        @Override
        public String getName() {
            return "Bus";
        }
    }
    public static class Train extends Land_Transportation{
        private String departureStation;
        private String departureTime;

        public Train(double purchasePrice, double rentalPrice, double averageSpeed,
                     int numPassengers, String fuelType, String departureStation, String departureTime) {
            super(purchasePrice, rentalPrice, averageSpeed, numPassengers,fuelType);
            this.departureTime = departureTime;
            this.departureStation = departureStation;
        }
        public void setDepartureTime(String departureTime){this.departureTime=departureTime;}
        public void setDepartureStation(String departureStation) { this.departureStation = departureStation; }
        public String getDepartureTime() {return this.departureTime;}
        public String getDepartureStation() { return this.departureStation; }

        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%-20s|%n|%-20s|%-20s|%n", "Departure Stop:",
                    "Departure time:", getDepartureStation(), getDepartureTime());
        }
        @Override
        public String get_arrival_info(){
            return "Arrive at " + getDepartureStation() + " at " + getDepartureTime();
        }

        @Override
        public String getName() {
            return "Train";
        }
    }

    public static class Bike extends Land_Transportation{
        private String pickupLocation;
        private String pickupTime;

        public Bike(double purchasePrice, double rentalPrice, double averageSpeed,
                    int numPassengers, String fuelType, String pickupLocation,String pickupTime) {
            super(purchasePrice, rentalPrice, averageSpeed, numPassengers,fuelType);
            this.pickupLocation = pickupLocation;
            this.pickupTime = pickupTime;

        }
        public void setPickupTime(String pickupTime) {this.pickupTime=pickupTime;}
        public void setPickupLocation(String pickupLocation) { this.pickupLocation = pickupLocation; }
        public String getPickupTime() {return this.pickupTime;}
        public String getPickupLocation() { return this.pickupLocation; }

        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%-20s|%n|%-20s|%-20s|%n", "Pickup Location:",
                    "Pickup time:", getPickupLocation(), getPickupTime());
        }
        @Override
        public String get_arrival_info(){
            return "Arrive at " + getPickupLocation() + " at " + getPickupTime();
        }

        @Override
        public String getName() {
            return "Bike";
        }
    }

    public static class Plane extends Air_Transportation {
        private String terminal;
        private int carryOnLimit;
        private double maxLuggageWeight;

        public Plane(String terminal,int carryOnLimit,double maxLuggageWeight,double purchasePrice, double rentalPrice,
                     double averageSpeed, int numPassengers, String airline, String airport, String departureTime, String arrivalTime){
            super(airport, airline, departureTime, arrivalTime, purchasePrice, rentalPrice, averageSpeed, numPassengers);
            this.terminal = terminal;
            this.carryOnLimit = carryOnLimit;
            this.maxLuggageWeight = maxLuggageWeight;
        }

        public String getTerminal() {return this.terminal;}
        public int getCarryOnLimit() {return this.carryOnLimit;}
        public double getMaxLuggageWeight() {return this.maxLuggageWeight;}

        public void setTerminal(String terminal) {this.terminal = terminal;}
        public void setCarryOnLimit(int carryOnLimit) {this.carryOnLimit = carryOnLimit;}
        public void setMaxLuggageWeight(double maxLuggageWeight) {this.maxLuggageWeight = maxLuggageWeight;}

        @Override
        public String get_arrival_info() {
            return super.get_arrival_info() + " and go to " + getTerminal() + " for your flight at: " + getDepartureTime();
        }

        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%-20s|%n|%-20s|%-20s|%n", "Departure Terminal:",
                    "Carry-on Limit(lbs):", getTerminal(), getCarryOnLimit());
        }

        @Override
        public String getName() {
            return "Plane";
        }
    }

    public static class Heli extends Air_Transportation {
        private int weight_limit;

        public Heli(int weight_limit, double purchasePrice,
                    double rentalPrice, double averageSpeed, int numPassengers, String airline, String airport,
                    String departureTime, String arrivalTime){
            super(airport, airline, departureTime, arrivalTime, purchasePrice, rentalPrice, averageSpeed,
                    numPassengers);
            this.weight_limit = weight_limit;
        }
        public void setWeight_limit(int weight_limit) { this.weight_limit = weight_limit; }
        public int getWeight_limit() { return this.weight_limit; }

        @Override
        public String get_arrival_info() {
            return super.get_arrival_info() + " and wait at the Helicopter Pads";
        }

        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%n|%-20d|%n", "Weight-Limit(lbs):", getWeight_limit());
        }

        @Override
        public String getName() {
            return "Helicopter";
        }
    }

    public static class Dirigible extends Air_Transportation {
        private int volume;

        public Dirigible(int volume, double purchasePrice,
                         double rentalPrice, double averageSpeed, int numPassengers, String airline, String airport,
                         String departureTime, String arrivalTime) {
            super(airport, airline, departureTime, arrivalTime, purchasePrice, rentalPrice, averageSpeed,
                    numPassengers);
            this.volume = volume;
        }

        public void setVolume(int volume) { this.volume = volume; }

        public int getVolume() { return this.volume; }

        @Override
        public String get_arrival_info() {
            return super.get_arrival_info() + " and wait at the Helicopter Pads";
        }

        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%n|%-20d|%n", "Volume/Size(m^3):", getVolume());
        }

        @Override
        public String getName() {
            return "Dirigible";
        }

    }

    public static class Hot_Air_Balloon extends Air_Transportation {
        private int max_altitude;

        public Hot_Air_Balloon(int max_altitude, double purchasePrice,
                               double rentalPrice, double averageSpeed, int numPassengers, String airline, String airport,
                               String departureTime, String arrivalTime) {
            super(airport, airline, departureTime, arrivalTime, purchasePrice, rentalPrice, averageSpeed,
                    numPassengers);
            this.max_altitude = max_altitude;
        }

        public void setMax_altitude(int max_altitude) {
            this.max_altitude = max_altitude;
        }

        public int getMax_altitude() {
            return this.max_altitude;
        }

        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%n|%-20d|%n", "Max-Altitude(m):", getMax_altitude());
        }

        @Override
        public String getName() {
            return "Hot Air Balloon";
        }

    }

    public static class Boat extends Water_Transportation {
        private int weight_limit;

        public Boat(int weight_limit,String dock, String loadingTime, String marina, String departureTime, double purchasePrice,
                    double rentalPrice, double averageSpeed, int numPassengers){
            super(dock,loadingTime,marina,departureTime, purchasePrice,rentalPrice,averageSpeed,numPassengers);
            this.weight_limit = weight_limit;
        }

        public void setWeight_limit(int weight_limit) { this.weight_limit = weight_limit; }
        public int getWeight_limit() { return this.weight_limit; }

        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%n|%-20d|%n", "Weight Limit(lbs):", getWeight_limit());
        }

        @Override
        public String getName() {
            return "Boat";
        }
    }

    public static class Submarine extends Water_Transportation {
        private int depth;

        public Submarine(int depth,String dock, String loadingTime, String marina, String departureTime, double purchasePrice,
                         double rentalPrice, double averageSpeed, int numPassengers){
            super(dock,loadingTime,marina,departureTime, purchasePrice,rentalPrice,averageSpeed,numPassengers);
            this.depth=depth;
        }

        public void setDepth(int depth) { this.depth = depth; }
        public int getDepth() { return this.depth; }

        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%n|%-20s|%n", "Travel-Depth(m):", getDepth());
        }

        @Override
        public String getName() {
            return "Submarine";
        }
    }

    public static class Ship extends Water_Transportation {
        private String hull_size;

        public Ship(String hull_size, String dock, String loadingTime, String marina, String departureTime, double purchasePrice,
                    double rentalPrice, double averageSpeed, int numPassengers){
            super(dock,loadingTime,marina,departureTime, purchasePrice,rentalPrice,averageSpeed,numPassengers);
            this.hull_size = hull_size;
        }

        public void setHull_size(String hull_size) { this.hull_size = hull_size; }
        public String getHull_size() { return this.hull_size; }

        @Override
        public String toString() {
            return super.toString() + String.format("%n%n|%-20s|%n|%-20s|%n", "Hull Size:", getHull_size());
        }

        @Override
        public String getName() {
            return super.getName() + "Ship";
        }
    }
}
